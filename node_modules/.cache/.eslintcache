[{"/Users/davidbekic/Google Drive/bojan_wtf/src/index.tsx":"1","/Users/davidbekic/Google Drive/bojan_wtf/src/App.tsx":"2","/Users/davidbekic/Google Drive/bojan_wtf/src/MainArea/MainArea.tsx":"3","/Users/davidbekic/Google Drive/bojan_wtf/src/MainArea/SongList.tsx":"4","/Users/davidbekic/Google Drive/bojan_wtf/src/MainArea/AudioPlayer.tsx":"5"},{"size":280,"mtime":1674146998518,"results":"6","hashOfConfig":"7"},{"size":445,"mtime":1674167615342,"results":"8","hashOfConfig":"7"},{"size":1677,"mtime":1674171710597,"results":"9","hashOfConfig":"7"},{"size":774,"mtime":1674171316350,"results":"10","hashOfConfig":"7"},{"size":3244,"mtime":1674169283931,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"e0dd91",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"/Users/davidbekic/Google Drive/bojan_wtf/src/index.tsx",[],[],"/Users/davidbekic/Google Drive/bojan_wtf/src/App.tsx",[],[],"/Users/davidbekic/Google Drive/bojan_wtf/src/MainArea/MainArea.tsx",["29"],[],"import React, { useState } from \"react\";\nimport { Song } from \"../App\";\nimport boromir from \"../assets/images/boromir.png\";\nimport boromir2 from \"../assets/images/boromir2.png\";\nimport boromir3 from \"../assets/images/boromir3.png\";\nimport boromir4 from \"../assets/images/FASHION.png\";\nimport song2 from \"../assets/music/song2.mp3\";\nimport song3 from \"../assets/music/song3.mp3\";\nimport helena from \"../assets/music/Helena.mp3\";\nimport song4 from \"../assets/music/svi_znaju_da_sam_sam.mp3\";\nimport { SongList } from \"./SongList\";\nimport { AudioPlayer } from \"./AudioPlayer\";\n\nexport const MainArea = () => {\n  const [imageClass, setImageClass] = useState(\"\");\n  const [index, setIndex] = useState<number>(0);\n\n  let songs: Song[] = [\n    { songFile: helena, image: boromir, name: \"danas mi je rodendan\" },\n    { songFile: song2, image: boromir2, name: \"Gud\" },\n    { songFile: song3, image: boromir3, name: \"flutes\" },\n    { songFile: song4, image: boromir4, name: \"svi znaju da sam sam\" },\n  ];\n\n  console.log(songs[0]);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <div\n        style={{\n          gap: \"10px\",\n          display: \"flex\",\n          alignItems: \"center\",\n          flexDirection: \"column\",\n        }}\n      >\n        <img className={imageClass} src={songs[index].image}></img>\n        <AudioPlayer\n          songs={songs}\n          index={index}\n          setIndex={setIndex}\n          setImageClass={setImageClass}\n        />\n        <SongList songs={songs} index={index} setIndex={setIndex} />\n      </div>\n    </div>\n  );\n};\n","/Users/davidbekic/Google Drive/bojan_wtf/src/MainArea/SongList.tsx",[],[],"/Users/davidbekic/Google Drive/bojan_wtf/src/MainArea/AudioPlayer.tsx",["30","31","32","33","34","35"],[],"import { PauseCircleOutline } from \"@mui/icons-material\";\nimport { IconButton, Slider } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { Song } from \"../App\";\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport ArrowForwardIcon from \"@mui/icons-material/ArrowForward\";\nimport PauseIcon from \"@mui/icons-material/Pause\";\n\ninterface AudioPlayerProps {\n  songs: Song[];\n  index: number;\n  setIndex: any;\n  setImageClass: any;\n}\n\nexport const AudioPlayer: React.FC<AudioPlayerProps> = ({\n  songs,\n  index,\n  setIndex,\n  setImageClass,\n}) => {\n  const [playing, setPlaying] = useState(false);\n  const [audio, setAudio] = useState<HTMLAudioElement | null>(null);\n  const [userInteracted, setUserInteracted] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  let maxDuration = 10;\n\n  useEffect(() => {\n    console.log(\"userInteracted: \", userInteracted);\n\n    if (audio && userInteracted) {\n      audio.play();\n    }\n  }, [index]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (audio) {\n        setCurrentTime(audio.currentTime);\n      }\n    }, 100);\n    return () => clearInterval(interval);\n  }, [audio]);\n\n  const handlePlayPause = () => {\n    setUserInteracted(true);\n    setImageClass(\"hoverImage\");\n    setTimeout(() => {\n      setImageClass(\"\");\n    }, 2000);\n    if (audio) {\n      if (playing) {\n        audio.pause();\n      } else {\n        audio.play();\n      }\n    }\n  };\n\n  const handleNext = () => {\n    if (audio) {\n      setPlaying(true);\n      setIndex((index + 1) % songs.length);\n      setPlaying(false);\n    }\n  };\n\n  //   const handleKeyPress = () => {\n  //     console.log(\"huh\");\n  //     handlePlayPause();\n  //   };\n\n  const handlePrevious = () => {\n    if (audio) {\n      audio.pause();\n      setIndex((index + songs.length - 1) % songs.length);\n      setPlaying(false);\n    }\n  };\n\n  const handleSliderChange = (event: any, newValue: any) => {\n    setCurrentTime(newValue);\n    if (audio) {\n      audio.currentTime = newValue;\n    }\n  };\n\n  if (audio) {\n    maxDuration = audio.duration;\n  }\n\n  console.log(currentTime);\n  return (\n    <div>\n      <audio\n        preload=\"metadata\"\n        style={{ fill: \"grey\" }}\n        src={songs[index].songFile}\n        ref={(element) => {\n          setAudio(element);\n        }}\n        onPlay={() => setPlaying(true)}\n        onPause={() => setPlaying(false)}\n      />\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n        {/* <IconButton onClick={handlePrevious}>\n          <ArrowBackIcon></ArrowBackIcon>\n        </IconButton> */}\n        <IconButton onClick={handlePlayPause}>\n          {playing ? <PauseCircleOutline /> : <PlayArrowIcon />}\n        </IconButton>\n        <div style={{ width: \"200px\", marginLeft: \"8px\", display: \"flex\" }}>\n          <Slider\n            sx={{ color: \"black\" }}\n            value={currentTime}\n            onChange={handleSliderChange}\n            defaultValue={0}\n            max={maxDuration}\n          />\n        </div>\n        {/* <IconButton onClick={handleNext}>\n          <ArrowForwardIcon></ArrowForwardIcon>\n        </IconButton> */}\n      </div>\n    </div>\n  );\n};\n",{"ruleId":"36","severity":1,"message":"37","line":44,"column":9,"nodeType":"38","endLine":44,"endColumn":62},{"ruleId":"39","severity":1,"message":"40","line":6,"column":8,"nodeType":"41","messageId":"42","endLine":6,"endColumn":21},{"ruleId":"39","severity":1,"message":"43","line":7,"column":8,"nodeType":"41","messageId":"42","endLine":7,"endColumn":24},{"ruleId":"39","severity":1,"message":"44","line":8,"column":8,"nodeType":"41","messageId":"42","endLine":8,"endColumn":17},{"ruleId":"45","severity":1,"message":"46","line":35,"column":6,"nodeType":"47","endLine":35,"endColumn":13,"suggestions":"48"},{"ruleId":"39","severity":1,"message":"49","line":61,"column":9,"nodeType":"41","messageId":"42","endLine":61,"endColumn":19},{"ruleId":"39","severity":1,"message":"50","line":74,"column":9,"nodeType":"41","messageId":"42","endLine":74,"endColumn":23},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'ArrowBackIcon' is defined but never used.","Identifier","unusedVar","'ArrowForwardIcon' is defined but never used.","'PauseIcon' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'audio' and 'userInteracted'. Either include them or remove the dependency array.","ArrayExpression",["51"],"'handleNext' is assigned a value but never used.","'handlePrevious' is assigned a value but never used.",{"desc":"52","fix":"53"},"Update the dependencies array to be: [audio, index, userInteracted]",{"range":"54","text":"55"},[1045,1052],"[audio, index, userInteracted]"]