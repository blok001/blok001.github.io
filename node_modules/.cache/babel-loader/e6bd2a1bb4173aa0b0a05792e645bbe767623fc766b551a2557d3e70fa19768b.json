{"ast":null,"code":"var _jsxFileName = \"/Users/davidbekic/Google Drive/bojan_wtf/src/MainArea/AudioPlayer.tsx\",\n  _s = $RefreshSig$();\nimport { PauseCircleOutline } from \"@mui/icons-material\";\nimport { IconButton, Slider } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AudioPlayer = _ref => {\n  _s();\n  let {\n    songs,\n    index,\n    setIndex,\n    setImageClass\n  } = _ref;\n  const [playing, setPlaying] = useState(false);\n  const [audio, setAudio] = useState(null);\n  const [userInteracted, setUserInteracted] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  let maxDuration = 10;\n  useEffect(() => {\n    if (audio && userInteracted) {\n      audio.play();\n    }\n  }, [index]);\n  useEffect(() => {\n    if (currentTime === maxDuration) {\n      setIndex((index + 1) % songs.length);\n    }\n    const interval = setInterval(() => {\n      if (audio) {\n        setCurrentTime(audio.currentTime);\n      }\n    }, 100);\n    return () => clearInterval(interval);\n  }, [audio]);\n  const handlePlayPause = () => {\n    setUserInteracted(true);\n    setImageClass(\"hoverImage\");\n    setTimeout(() => {\n      setImageClass(\"\");\n    }, 2000);\n    if (audio) {\n      if (playing) {\n        audio.pause();\n      } else {\n        audio.play();\n      }\n    }\n  };\n  const handleNext = () => {\n    if (audio) {\n      setPlaying(true);\n      setIndex((index + 1) % songs.length);\n      setPlaying(false);\n    }\n  };\n\n  //   const handleKeyPress = () => {\n  //     console.log(\"huh\");\n  //     handlePlayPause();\n  //   };\n\n  const handlePrevious = () => {\n    if (audio) {\n      audio.pause();\n      setIndex((index + songs.length - 1) % songs.length);\n      setPlaying(false);\n    }\n  };\n  const handleSliderChange = (event, newValue) => {\n    setCurrentTime(newValue);\n    if (audio) {\n      audio.currentTime = newValue;\n    }\n  };\n  if (audio) {\n    maxDuration = audio.duration;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      preload: \"metadata\",\n      style: {\n        fill: \"grey\"\n      },\n      src: songs[index].songFile,\n      ref: element => {\n        setAudio(element);\n      },\n      onPlay: () => setPlaying(true),\n      onPause: () => setPlaying(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: handlePlayPause,\n        children: playing ? /*#__PURE__*/_jsxDEV(PauseCircleOutline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 22\n        }, this) : /*#__PURE__*/_jsxDEV(PlayArrowIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"200px\",\n          marginLeft: \"8px\",\n          display: \"flex\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Slider, {\n          sx: {\n            color: \"black\"\n          },\n          value: currentTime,\n          onChange: handleSliderChange,\n          defaultValue: 0,\n          max: maxDuration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioPlayer, \"piIi8T4CVsqt1vAFma4nb1OEnFQ=\");\n_c = AudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"names":["PauseCircleOutline","IconButton","Slider","React","useEffect","useState","PlayArrowIcon","AudioPlayer","songs","index","setIndex","setImageClass","playing","setPlaying","audio","setAudio","userInteracted","setUserInteracted","currentTime","setCurrentTime","maxDuration","play","length","interval","setInterval","clearInterval","handlePlayPause","setTimeout","pause","handleNext","handlePrevious","handleSliderChange","event","newValue","duration","fill","songFile","element","display","alignItems","width","marginLeft","color"],"sources":["/Users/davidbekic/Google Drive/bojan_wtf/src/MainArea/AudioPlayer.tsx"],"sourcesContent":["import { PauseCircleOutline } from \"@mui/icons-material\";\nimport { IconButton, Slider } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { Song } from \"../App\";\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport ArrowForwardIcon from \"@mui/icons-material/ArrowForward\";\nimport PauseIcon from \"@mui/icons-material/Pause\";\n\ninterface AudioPlayerProps {\n  songs: Song[];\n  index: number;\n  setIndex: any;\n  setImageClass: any;\n}\n\nexport const AudioPlayer: React.FC<AudioPlayerProps> = ({\n  songs,\n  index,\n  setIndex,\n  setImageClass,\n}) => {\n  const [playing, setPlaying] = useState(false);\n  const [audio, setAudio] = useState<HTMLAudioElement | null>(null);\n  const [userInteracted, setUserInteracted] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  let maxDuration = 10;\n\n  useEffect(() => {\n    if (audio && userInteracted) {\n      audio.play();\n    }\n  }, [index]);\n\n  useEffect(() => {\n    if (currentTime === maxDuration) {\n      setIndex((index + 1) % songs.length);\n    }\n    const interval = setInterval(() => {\n      if (audio) {\n        setCurrentTime(audio.currentTime);\n      }\n    }, 100);\n    return () => clearInterval(interval);\n  }, [audio]);\n\n  const handlePlayPause = () => {\n    setUserInteracted(true);\n    setImageClass(\"hoverImage\");\n    setTimeout(() => {\n      setImageClass(\"\");\n    }, 2000);\n    if (audio) {\n      if (playing) {\n        audio.pause();\n      } else {\n        audio.play();\n      }\n    }\n  };\n\n  const handleNext = () => {\n    if (audio) {\n      setPlaying(true);\n      setIndex((index + 1) % songs.length);\n      setPlaying(false);\n    }\n  };\n\n  //   const handleKeyPress = () => {\n  //     console.log(\"huh\");\n  //     handlePlayPause();\n  //   };\n\n  const handlePrevious = () => {\n    if (audio) {\n      audio.pause();\n      setIndex((index + songs.length - 1) % songs.length);\n      setPlaying(false);\n    }\n  };\n\n  const handleSliderChange = (event: any, newValue: any) => {\n    setCurrentTime(newValue);\n    if (audio) {\n      audio.currentTime = newValue;\n    }\n  };\n\n  if (audio) {\n    maxDuration = audio.duration;\n  }\n\n  return (\n    <div>\n      <audio\n        preload=\"metadata\"\n        style={{ fill: \"grey\" }}\n        src={songs[index].songFile}\n        ref={(element) => {\n          setAudio(element);\n        }}\n        onPlay={() => setPlaying(true)}\n        onPause={() => setPlaying(false)}\n      />\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n        <IconButton onClick={handlePlayPause}>\n          {playing ? <PauseCircleOutline /> : <PlayArrowIcon />}\n        </IconButton>\n        <div style={{ width: \"200px\", marginLeft: \"8px\", display: \"flex\" }}>\n          <Slider\n            sx={{ color: \"black\" }}\n            value={currentTime}\n            onChange={handleSliderChange}\n            defaultValue={0}\n            max={maxDuration}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}